#!/bin/bash

if [[ "$1" == "" ]]; then
    echo "USAGE: aws_list_targets <ELB Name>"
    echo "List instances registered with an ELB by instance-id, port and state"
    exit 0
fi

if [[ "$AWS_REGION" == "" ]]; then
    ZONE=$(curl -s --connect-timeout 3 http://169.254.169.254/latest/meta-data/placement/availability-zone)
    AWS_REGION=${ZONE:0:${#ZONE}-1}
fi

arn=$(aws elbv2 describe-load-balancers --region $AWS_REGION --names $1 | jq -r '.LoadBalancers[0].LoadBalancerArn' 2> /dev/null)


if [[ "$arn" != "" ]]; then
    for target in $(aws elbv2 describe-target-groups --region $AWS_REGION --load-balancer-arn "$arn" | jq -r '.TargetGroups[] | .TargetGroupArn'); do
        aws elbv2 describe-target-health --region $AWS_REGION --target-group-arn $target | jq -r ".TargetHealthDescriptions[] | [.Target.Id,.Target.Port, .TargetHealth.State] | @csv" |  sed 's/"//g'
    done
else
    >&2  echo "Checking for classic"
    aws elb describe-instance-health --load-balancer-name $1 --region $AWS_REGION | jq -r ".InstanceStates[] | [.InstanceId,.State] | @csv" | sed 's/"//g'
fi